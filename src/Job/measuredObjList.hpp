#ifndef MEASUREDOBJLIST_HPP
#define MEASUREDOBJLIST_HPP

#include "measuredObj.hpp"

namespace Job
{
/**
 *  @brief MeasuredObjList 具有双向链表功能的类
 *         功能有：
 *         1.往链表头部插入节点
 *         2.往链表尾部插入节点
 *         3.在链表头部删除一个节点
 *         4.在链表尾部删除一个节点
 *         5.打印链表所有内容
 *  @author grace
 *  @version 1.00 2017-11-27 grace
 *                note:create it
 */
class MeasuredObjList
{
public:

    //>>>----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    //constructor & destructor

    MeasuredObjList();

    ~MeasuredObjList();

    //<<<----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    //>>>----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    //operate function

    /*
    *  @brief 在链表头部插入一个节点
    *  @param obj：待插入的节点的指针
    *  @return NA
    */
    void pushHeadNode(MeasuredObj * ptr);

    /*
    *  @brief 在链表尾部插入一个节点
    *  @param obj：待插入的节点的指针
    *  @return NA
    */
    void pushTailNode(MeasuredObj * ptr);

    /*
    *  @brief 删除链表的第一个节点
    *  @param NA
    *  @return 第一个节点的地址
    */
//    MeasuredObj * pullHeadNode();
    void pullHeadNode();

    /*
    *  @brief 删除链表最后一个节点
    *  @param NA
    *  @return 最后一个节点的地址
    */
//    MeasuredObj * pullTailNode();
    void pullTailNode();

    /*
    *  @brief 打印链表所有节点内容
    *  @param NA
    *  @return NA
    */
    void print();

    //<<<----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    //>>>----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    //get & set function

    int size() {return this->m_size;}

    MeasuredObj * headMeasuredObjs() {return this->m_pHead;}
    void setHeadMeasuredObj(MeasuredObj * pHead) {this->m_pHead = pHead;}

    //<<<----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

private:

    //>>>----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    //member variant

    int m_size = 0; //链表长度
    MeasuredObj *m_pHead=nullptr; //链表头指针，所有数据通过头指针访问

    //<<<----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

};//End of class MeasuredObjList
}//End of namespace Job

#endif // MEASUREOBJLIST_HPP
